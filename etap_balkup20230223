-- DROP SCHEMA dbo;

CREATE SCHEMA dbo;
-- ETapManagementSIT.dbo.application_forms definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.application_forms GO

CREATE TABLE ETapManagementSIT.dbo.application_forms (
	id int IDENTITY(1,1) NOT NULL,
	name varchar(30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	description varchar(300) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	isAdd bit NULL,
	isUpdate bit NULL,
	isDelete bit NULL,
	isView bit NULL,
	CONSTRAINT application_forms_name_key UNIQUE (name),
	CONSTRAINT page_pkey PRIMARY KEY (id)
) GO
CREATE UNIQUE INDEX application_forms_name_key ON ETapManagementSIT.dbo.application_forms (name) GO;


-- ETapManagementSIT.dbo.audit_logs definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.audit_logs GO

CREATE TABLE ETapManagementSIT.dbo.audit_logs (
	id int IDENTITY(1,1) NOT NULL,
	[action] varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	message varchar(2000) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	CONSTRAINT auditlog_pkey PRIMARY KEY (id)
) GO;


-- ETapManagementSIT.dbo.component_type definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.component_type GO

CREATE TABLE ETapManagementSIT.dbo.component_type (
	id int IDENTITY(1,1) NOT NULL,
	name varchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	description varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	is_delete bit DEFAULT 0 NULL,
	is_active bit NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	CONSTRAINT PK__componen__3213E83F568EF532 PRIMARY KEY (id),
	CONSTRAINT UQ__componen__72E12F1B396403F9 UNIQUE (name)
) GO
CREATE UNIQUE INDEX UQ__componen__72E12F1B396403F9 ON ETapManagementSIT.dbo.component_type (name) GO;


-- ETapManagementSIT.dbo.fabrication_status_history definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.fabrication_status_history GO

CREATE TABLE ETapManagementSIT.dbo.fabrication_status_history (
	id int IDENTITY(1,1) NOT NULL,
	fabcost_id int NULL,
	notes varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status_internal varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	role_id int NULL,
	updated_by int NULL,
	updated_at datetime NULL
) GO;


-- ETapManagementSIT.dbo.independent_company definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.independent_company GO

CREATE TABLE ETapManagementSIT.dbo.independent_company (
	id int IDENTITY(1,1) NOT NULL,
	name varchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	description varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	is_active bit DEFAULT 1 NOT NULL,
	is_delete bit DEFAULT 0 NOT NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	CONSTRAINT PK__independ__3213E83FC05B418C PRIMARY KEY (id)
) GO;


-- ETapManagementSIT.dbo.role_hierarchy definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.role_hierarchy GO

CREATE TABLE ETapManagementSIT.dbo.role_hierarchy (
	id int IDENTITY(1,1) NOT NULL,
	role_name varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	scenario_type varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	role_hierarchy int NULL,
	new_status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	chk_status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	view_details_status varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	service_type varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CONSTRAINT PK__role_hie__3213E83FB7A46A91 PRIMARY KEY (id)
) GO;


-- ETapManagementSIT.dbo.roles definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.roles GO

CREATE TABLE ETapManagementSIT.dbo.roles (
	id int IDENTITY(1,1) NOT NULL,
	name varchar(30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	description varchar(300) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[level] int NULL,
	CONSTRAINT site_roles_name_key UNIQUE (name),
	CONSTRAINT site_roles_pkey PRIMARY KEY (id)
) GO
CREATE UNIQUE INDEX site_roles_name_key ON ETapManagementSIT.dbo.roles (name) GO;


-- ETapManagementSIT.dbo.segment definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.segment GO

CREATE TABLE ETapManagementSIT.dbo.segment (
	id int IDENTITY(1,1) NOT NULL,
	name varchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	description varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CONSTRAINT PK__segment__3213E83FBD863FCE PRIMARY KEY (id),
	CONSTRAINT UQ__segment__72E12F1BB60B301A UNIQUE (name)
) GO
CREATE UNIQUE INDEX UQ__segment__72E12F1BB60B301A ON ETapManagementSIT.dbo.segment (name) GO;


-- ETapManagementSIT.dbo.service_type definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.service_type GO

CREATE TABLE ETapManagementSIT.dbo.service_type (
	id int IDENTITY(1,1) NOT NULL,
	name varchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	description varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CONSTRAINT PK__service___3213E83FDC739188 PRIMARY KEY (id),
	CONSTRAINT UQ__service___72E12F1BC5E41A68 UNIQUE (name)
) GO
CREATE UNIQUE INDEX UQ__service___72E12F1BC5E41A68 ON ETapManagementSIT.dbo.service_type (name) GO;


-- ETapManagementSIT.dbo.site_physical_verf definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.site_physical_verf GO

CREATE TABLE ETapManagementSIT.dbo.site_physical_verf (
	id int IDENTITY(1,1) NOT NULL,
	duedate_from datetime NULL,
	duedate_to datetime NULL,
	inspection_id varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	CONSTRAINT PK__site_phy__3213E83F9853B11A PRIMARY KEY (id)
) GO;


-- ETapManagementSIT.dbo.strategic_business definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.strategic_business GO

CREATE TABLE ETapManagementSIT.dbo.strategic_business (
	id int IDENTITY(1,1) NOT NULL,
	name varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	is_delete bit DEFAULT 0 NOT NULL,
	is_active bit NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	CONSTRAINT strategic_business_pkey PRIMARY KEY (id)
) GO;


-- ETapManagementSIT.dbo.structure_type definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.structure_type GO

CREATE TABLE ETapManagementSIT.dbo.structure_type (
	id int IDENTITY(1,1) NOT NULL,
	name varchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	is_active bit DEFAULT 1 NOT NULL,
	is_delete bit DEFAULT 0 NOT NULL,
	description varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	CONSTRAINT PK__structur__3213E83F1851D90C PRIMARY KEY (id)
) GO;


-- ETapManagementSIT.dbo.sub_contractor definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.sub_contractor GO

CREATE TABLE ETapManagementSIT.dbo.sub_contractor (
	id int IDENTITY(1,1) NOT NULL,
	vendor_code varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	name varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	email varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	phone_no varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	is_delete bit DEFAULT 0 NULL,
	is_status bit DEFAULT 0 NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	CONSTRAINT subcont_pkey PRIMARY KEY (id)
) GO;


-- ETapManagementSIT.dbo.test definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.test GO

CREATE TABLE ETapManagementSIT.dbo.test (
	name int NULL
) GO;


-- ETapManagementSIT.dbo.business_unit definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.business_unit GO

CREATE TABLE ETapManagementSIT.dbo.business_unit (
	id int IDENTITY(1,1) NOT NULL,
	ic_id int NOT NULL,
	name varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	is_delete bit DEFAULT 0 NOT NULL,
	is_active bit NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	sbg_id int NULL,
	CONSTRAINT business_unit_pkey PRIMARY KEY (id),
	CONSTRAINT business_unit_icId_IC__fkey FOREIGN KEY (ic_id) REFERENCES ETapManagementSIT.dbo.independent_company(id),
	CONSTRAINT business_unit_sbgId_SBG__fkey FOREIGN KEY (sbg_id) REFERENCES ETapManagementSIT.dbo.strategic_business(id)
) GO;


-- ETapManagementSIT.dbo.project definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.project GO

CREATE TABLE ETapManagementSIT.dbo.project (
	id int IDENTITY(1,1) NOT NULL,
	name varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	proj_code varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	area varchar(10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	ic_id int NOT NULL,
	bu_id int NOT NULL,
	job_code varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	edrc_code varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	is_delete bit DEFAULT 0 NOT NULL,
	is_active bit NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	CONSTRAINT project_pkey PRIMARY KEY (id),
	CONSTRAINT project_buId_BU__fkey FOREIGN KEY (bu_id) REFERENCES ETapManagementSIT.dbo.business_unit(id),
	CONSTRAINT project_icId_IC__fkey FOREIGN KEY (ic_id) REFERENCES ETapManagementSIT.dbo.independent_company(id)
) GO;


-- ETapManagementSIT.dbo.project_sitelocation definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.project_sitelocation GO

CREATE TABLE ETapManagementSIT.dbo.project_sitelocation (
	id int IDENTITY(1,1) NOT NULL,
	name varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	project_id int NOT NULL,
	CONSTRAINT project_sitelocation_pkey PRIMARY KEY (id),
	CONSTRAINT project_sitelocation_projectId_fkey FOREIGN KEY (project_id) REFERENCES ETapManagementSIT.dbo.project(id)
) GO;


-- ETapManagementSIT.dbo.roles_applicationforms definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.roles_applicationforms GO

CREATE TABLE ETapManagementSIT.dbo.roles_applicationforms (
	id int IDENTITY(1,1) NOT NULL,
	form_id int NOT NULL,
	role_id int NOT NULL,
	isAdd bit NULL,
	isUpdate bit NULL,
	isDelete bit NULL,
	isView bit NULL,
	CONSTRAINT roles_forms_pkey PRIMARY KEY (id),
	CONSTRAINT rolesforms_forms_id_fkey FOREIGN KEY (form_id) REFERENCES ETapManagementSIT.dbo.application_forms(id),
	CONSTRAINT rolesforms_roles_id_fkey FOREIGN KEY (role_id) REFERENCES ETapManagementSIT.dbo.roles(id)
) GO;


-- ETapManagementSIT.dbo.site_requirement definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.site_requirement GO

CREATE TABLE ETapManagementSIT.dbo.site_requirement (
	id int IDENTITY(1,1) NOT NULL,
	mr_no varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	from_project_id int NOT NULL,
	remarks varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status_internal varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	role_id int NOT NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	is_delete bit DEFAULT 0 NOT NULL,
	CONSTRAINT PK__site_req__3213E83FC195E882 PRIMARY KEY (id),
	CONSTRAINT UQ__site_req__AE8CB972C5005D06 UNIQUE (mr_no),
	CONSTRAINT siteReq_proj_fkey FOREIGN KEY (from_project_id) REFERENCES ETapManagementSIT.dbo.project(id)
) GO
CREATE UNIQUE INDEX UQ__site_req__AE8CB972C5005D06 ON ETapManagementSIT.dbo.site_requirement (mr_no) GO;


-- ETapManagementSIT.dbo.sitereq_status_history definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.sitereq_status_history GO

CREATE TABLE ETapManagementSIT.dbo.sitereq_status_history (
	id int IDENTITY(1,1) NOT NULL,
	mr_no varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	sitereq_id int NOT NULL,
	notes varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status_internal varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	role_id int NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	CONSTRAINT PK__sitereq___3213E83F6E97E4A7 PRIMARY KEY (id),
	CONSTRAINT sitereq_status_history_sitereq_fkey FOREIGN KEY (sitereq_id) REFERENCES ETapManagementSIT.dbo.site_requirement(id)
) GO;


-- ETapManagementSIT.dbo.structures definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.structures GO

CREATE TABLE ETapManagementSIT.dbo.structures (
	id int IDENTITY(1,1) NOT NULL,
	name varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	structure_type_id int NOT NULL,
	is_delete bit DEFAULT 0 NOT NULL,
	is_active bit NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	structure_attributes_def nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CONSTRAINT structure_pkey PRIMARY KEY (id),
	CONSTRAINT structures_structuretype_fkey FOREIGN KEY (structure_type_id) REFERENCES ETapManagementSIT.dbo.structure_type(id)
) GO;


-- ETapManagementSIT.dbo.subContractor_serviceType definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.subContractor_serviceType GO

CREATE TABLE ETapManagementSIT.dbo.subContractor_serviceType (
	id int IDENTITY(1,1) NOT NULL,
	subcont_id int NOT NULL,
	servicetype_id int NOT NULL,
	CONSTRAINT subST_pkey PRIMARY KEY (id),
	CONSTRAINT subST_servieType_fkey FOREIGN KEY (servicetype_id) REFERENCES ETapManagementSIT.dbo.service_type(id),
	CONSTRAINT subST_subconractor_fkey FOREIGN KEY (subcont_id) REFERENCES ETapManagementSIT.dbo.sub_contractor(id)
) GO;


-- ETapManagementSIT.dbo.users definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.users GO

CREATE TABLE ETapManagementSIT.dbo.users (
	id int IDENTITY(1,1) NOT NULL,
	project_id int NOT NULL,
	ic_id int NOT NULL,
	bu_id int NOT NULL,
	ps_no varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	password varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	first_name varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	last_name varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	phoneno varchar(15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	email varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	role_id int NOT NULL,
	is_active bit DEFAULT 1 NULL,
	is_delete bit DEFAULT 0 NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_at datetime DEFAULT getdate() NULL,
	created_by int NULL,
	updated_by int NULL,
	vendor_id int NULL,
	CONSTRAINT users_pkey PRIMARY KEY (id),
	CONSTRAINT user_roles_id_fkey FOREIGN KEY (role_id) REFERENCES ETapManagementSIT.dbo.roles(id),
	CONSTRAINT users_bu_fkey FOREIGN KEY (bu_id) REFERENCES ETapManagementSIT.dbo.business_unit(id),
	CONSTRAINT users_ic_fkey FOREIGN KEY (ic_id) REFERENCES ETapManagementSIT.dbo.independent_company(id),
	CONSTRAINT users_proj_fkey FOREIGN KEY (project_id) REFERENCES ETapManagementSIT.dbo.project(id)
) GO;


-- ETapManagementSIT.dbo.work_breakdown definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.work_breakdown GO

CREATE TABLE ETapManagementSIT.dbo.work_breakdown (
	id int IDENTITY(1,1) NOT NULL,
	wbs_id varchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	project_id int NOT NULL,
	name varchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	elements varchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	is_delete bit DEFAULT 0 NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	segment varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	sub_segment varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CONSTRAINT wbs_pkey PRIMARY KEY (id),
	CONSTRAINT wbs_proj_fkey FOREIGN KEY (project_id) REFERENCES ETapManagementSIT.dbo.project(id)
) GO;


-- ETapManagementSIT.dbo.project_structure definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.project_structure GO

CREATE TABLE ETapManagementSIT.dbo.project_structure (
	id int IDENTITY(1,1) NOT NULL,
	structure_id int NOT NULL,
	struct_code varchar(10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	project_id int NOT NULL,
	components_count int NULL,
	estimated_weight decimal(10,2) NULL,
	structure_status varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	current_status varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	is_delete bit DEFAULT 0 NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	exp_release_date datetime NULL,
	drawing_no varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	actual_wbs int NULL,
	fabrication_year datetime NULL,
	remarks varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	actual_weight decimal(18,2) NULL,
	reusuability bit NULL,
	fabriacation_cost decimal(10,0) NULL,
	structure_attributes_val nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CONSTRAINT projstructure_pkey PRIMARY KEY (id),
	CONSTRAINT projstructure_proj_fkey FOREIGN KEY (project_id) REFERENCES ETapManagementSIT.dbo.project(id),
	CONSTRAINT projstructure_structures_fkey FOREIGN KEY (structure_id) REFERENCES ETapManagementSIT.dbo.structures(id)
) GO;


-- ETapManagementSIT.dbo.project_structure_documents definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.project_structure_documents GO

CREATE TABLE ETapManagementSIT.dbo.project_structure_documents (
	id int IDENTITY(1,1) NOT NULL,
	project_structure_id int NOT NULL,
	file_name varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	file_type varchar(10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[path] varchar(1000) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CONSTRAINT project_structure_documents_pkey PRIMARY KEY (id),
	CONSTRAINT project_structure_id_psID_fkey FOREIGN KEY (project_structure_id) REFERENCES ETapManagementSIT.dbo.project_structure(id)
) GO;


-- ETapManagementSIT.dbo.scrap_structure definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.scrap_structure GO

CREATE TABLE ETapManagementSIT.dbo.scrap_structure (
	id int IDENTITY(1,1) NOT NULL,
	subcon_id int NULL,
	proj_struct_id int NULL,
	scrap_rate decimal(10,2) NULL,
	auction_id varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	is_delete bit DEFAULT 0 NOT NULL,
	role_id int NULL,
	from_project_id int NULL,
	disp_structure_id int NULL,
	CONSTRAINT PK__scrap_st__3213E83F72AA0607 PRIMARY KEY (id),
	CONSTRAINT scrap_structure_subcon_fkey FOREIGN KEY (subcon_id) REFERENCES ETapManagementSIT.dbo.sub_contractor(id),
	CONSTRAINT scrap_strucure_projstructure_fkey FOREIGN KEY (proj_struct_id) REFERENCES ETapManagementSIT.dbo.project_structure(id)
) GO;


-- ETapManagementSIT.dbo.site_declaration definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.site_declaration GO

CREATE TABLE ETapManagementSIT.dbo.site_declaration (
	id int IDENTITY(1,1) NOT NULL,
	sitereq_id int NULL,
	proj_struct_id int NULL,
	from_project_id int NULL,
	surplus_fromdate datetime NOT NULL,
	status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status_internal varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	notes varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	role_id int NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	is_delete bit DEFAULT 0 NOT NULL,
	CONSTRAINT PK__site_dec__3213E83F774BB95E PRIMARY KEY (id),
	CONSTRAINT siteDec_projstructure_fkey FOREIGN KEY (proj_struct_id) REFERENCES ETapManagementSIT.dbo.project_structure(id),
	CONSTRAINT siteDec_siteReq_fkey FOREIGN KEY (sitereq_id) REFERENCES ETapManagementSIT.dbo.site_requirement(id)
) GO;


-- ETapManagementSIT.dbo.site_req_structure definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.site_req_structure GO

CREATE TABLE ETapManagementSIT.dbo.site_req_structure (
	id int IDENTITY(1,1) NOT NULL,
	site_req_id int NOT NULL,
	struct_id int NOT NULL,
	plan_startdate datetime NOT NULL,
	plan_releasedate datetime NOT NULL,
	actual_startdate datetime NOT NULL,
	actual_releasedate datetime NOT NULL,
	require_wbs_id int NOT NULL,
	actual_wbs_id int NOT NULL,
	quantity int NULL,
	status varchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	structure_attributes_val nvarchar(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CONSTRAINT PK__site_req__3213E83F9CFDDCC9 PRIMARY KEY (id),
	CONSTRAINT siteReqStructire_siteReq_fkey FOREIGN KEY (site_req_id) REFERENCES ETapManagementSIT.dbo.site_requirement(id),
	CONSTRAINT siteReqStructire_structure_fkey FOREIGN KEY (struct_id) REFERENCES ETapManagementSIT.dbo.structures(id)
) GO;


-- ETapManagementSIT.dbo.site_structure_physicalverf definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.site_structure_physicalverf GO

CREATE TABLE ETapManagementSIT.dbo.site_structure_physicalverf (
	id int IDENTITY(1,1) NOT NULL,
	site_verf_id int NULL,
	project_id int NULL,
	proj_struct_id int NULL,
	duedate_from datetime NULL,
	duedate_to datetime NULL,
	status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status_internal varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	role_id int NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	CONSTRAINT PK__site_str__3213E83FCA6FA223 PRIMARY KEY (id),
	CONSTRAINT site_structure_physicalverf_proj_fkey FOREIGN KEY (project_id) REFERENCES ETapManagementSIT.dbo.project(id),
	CONSTRAINT site_structure_physicalverf_site_physical_verf_fkey FOREIGN KEY (site_verf_id) REFERENCES ETapManagementSIT.dbo.site_physical_verf(id),
	CONSTRAINT site_structure_physicalverf_strucutre_fkey FOREIGN KEY (proj_struct_id) REFERENCES ETapManagementSIT.dbo.project_structure(id)
) GO;


-- ETapManagementSIT.dbo.sitedecl_documents definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.sitedecl_documents GO

CREATE TABLE ETapManagementSIT.dbo.sitedecl_documents (
	id int IDENTITY(1,1) NOT NULL,
	sitedec_id int NOT NULL,
	file_name varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	file_type varchar(10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[path] varchar(1000) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CONSTRAINT sitedecl_documents_pkey PRIMARY KEY (id),
	CONSTRAINT sitedecl_documents_sitedecl_fkey FOREIGN KEY (sitedec_id) REFERENCES ETapManagementSIT.dbo.site_declaration(id)
) GO;


-- ETapManagementSIT.dbo.sitedecl_status_history definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.sitedecl_status_history GO

CREATE TABLE ETapManagementSIT.dbo.sitedecl_status_history (
	id int IDENTITY(1,1) NOT NULL,
	sitedec_id int NULL,
	notes varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status_internal varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	role_id int NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	CONSTRAINT PK__sitedecl__3213E83F38EB8188 PRIMARY KEY (id),
	CONSTRAINT siteDeclStatus_siteDec_fkey FOREIGN KEY (sitedec_id) REFERENCES ETapManagementSIT.dbo.site_declaration(id)
) GO;


-- ETapManagementSIT.dbo.component definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.component GO

CREATE TABLE ETapManagementSIT.dbo.component (
	id int IDENTITY(1,1) NOT NULL,
	proj_struct_id int NOT NULL,
	comp_id varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	comp_type_id int NOT NULL,
	component_no int NULL,
	comp_name varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	is_group bit DEFAULT 0 NULL,
	leng decimal(10,6) NULL,
	breath decimal(10,6) NULL,
	height decimal(10,6) NULL,
	thickness decimal(10,6) NULL,
	weight decimal(10,6) NULL,
	make_type varchar(30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	is_tag bit NULL,
	qr_code varchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	is_delete bit DEFAULT 0 NULL,
	is_active bit DEFAULT 0 NULL,
	comp_status varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	drawing_no varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	fabriacation_cost decimal(10,0) NULL,
	CONSTRAINT comp_pkey PRIMARY KEY (id),
	CONSTRAINT comp_comptype_fkey FOREIGN KEY (comp_type_id) REFERENCES ETapManagementSIT.dbo.component_type(id),
	CONSTRAINT comp_projstruct_fkey FOREIGN KEY (proj_struct_id) REFERENCES ETapManagementSIT.dbo.project_structure(id)
) GO;


-- ETapManagementSIT.dbo.component_history definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.component_history GO

CREATE TABLE ETapManagementSIT.dbo.component_history (
	id int IDENTITY(1,1) NOT NULL,
	proj_struct_id int NOT NULL,
	comp_id varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	comp_type_id int NOT NULL,
	component_no int NULL,
	is_group bit DEFAULT 0 NULL,
	leng decimal(10,6) NULL,
	breath decimal(10,6) NULL,
	height decimal(10,6) NULL,
	thickness decimal(10,6) NULL,
	weight decimal(10,6) NULL,
	make_type varchar(30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	is_tag bit NULL,
	qr_code varchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	is_delete bit DEFAULT 0 NULL,
	is_active bit DEFAULT 0 NULL,
	comp_status varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	drawing_no varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CONSTRAINT comphistory_pkey PRIMARY KEY (id),
	CONSTRAINT comphistory_comptype_fkey FOREIGN KEY (comp_type_id) REFERENCES ETapManagementSIT.dbo.component_type(id),
	CONSTRAINT comphistory_projstruct_fkey FOREIGN KEY (proj_struct_id) REFERENCES ETapManagementSIT.dbo.project_structure(id)
) GO;


-- ETapManagementSIT.dbo.dispatch_requirement definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.dispatch_requirement GO

CREATE TABLE ETapManagementSIT.dbo.dispatch_requirement (
	id int IDENTITY(1,1) NOT NULL,
	dispatch_no varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	sitereq_id int NULL,
	to_projectid int NULL,
	servicetype_id int NULL,
	quantity int NULL,
	transfer_price decimal(10,2) NULL,
	status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status_internal varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	role_id int NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	is_delete bit DEFAULT 0 NOT NULL,
	site_req_structid int NULL,
	CONSTRAINT PK__dispatch__3213E83F08EA011E PRIMARY KEY (id),
	CONSTRAINT UQ__dispatch__F7205CCDFAFBA6D9 UNIQUE (dispatch_no),
	CONSTRAINT dispatch_requirement_proj_fkey FOREIGN KEY (to_projectid) REFERENCES ETapManagementSIT.dbo.project(id),
	CONSTRAINT dispatch_requirement_servicetype_fkey FOREIGN KEY (servicetype_id) REFERENCES ETapManagementSIT.dbo.service_type(id),
	CONSTRAINT dispatch_requirement_siteReq_fkey FOREIGN KEY (sitereq_id) REFERENCES ETapManagementSIT.dbo.site_requirement(id),
	CONSTRAINT dispatch_requirement_siteReqstructure_fkey FOREIGN KEY (site_req_structid) REFERENCES ETapManagementSIT.dbo.site_req_structure(id)
) GO
CREATE UNIQUE INDEX UQ__dispatch__F7205CCDFAFBA6D9 ON ETapManagementSIT.dbo.dispatch_requirement (dispatch_no) GO;


-- ETapManagementSIT.dbo.dispatchreq_subcont definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.dispatchreq_subcont GO

CREATE TABLE ETapManagementSIT.dbo.dispatchreq_subcont (
	id int IDENTITY(1,1) NOT NULL,
	dispreq_id int NULL,
	dispatch_no varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	subcon_id int NULL,
	servicetype_id int NULL,
	workorder_no varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	quantity int NULL,
	status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status_internal varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	role_id int NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	is_delete bit DEFAULT 0 NOT NULL,
	CONSTRAINT PK__dispatch__3213E83FB68E0A4F PRIMARY KEY (id),
	CONSTRAINT dispatchreq_subcont_dispatch_requirement_fkey FOREIGN KEY (dispreq_id) REFERENCES ETapManagementSIT.dbo.dispatch_requirement(id),
	CONSTRAINT dispatchreq_subcont_servicetype_fkey FOREIGN KEY (servicetype_id) REFERENCES ETapManagementSIT.dbo.service_type(id),
	CONSTRAINT dispatchreq_subcont_subcont_fkey FOREIGN KEY (subcon_id) REFERENCES ETapManagementSIT.dbo.sub_contractor(id)
) GO;


-- ETapManagementSIT.dbo.disreq_status_history definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.disreq_status_history GO

CREATE TABLE ETapManagementSIT.dbo.disreq_status_history (
	id int IDENTITY(1,1) NOT NULL,
	dispatch_no varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	dispreq_id int NULL,
	status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status_internal varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	notes varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	role_id int NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	CONSTRAINT PK__disreq_s__3213E83FCFEF97C1 PRIMARY KEY (id),
	CONSTRAINT dispatch_requirement_statushistory_dispreq_fkey FOREIGN KEY (dispreq_id) REFERENCES ETapManagementSIT.dbo.dispatch_requirement(id)
) GO;


-- ETapManagementSIT.dbo.scrap_status_history definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.scrap_status_history GO

CREATE TABLE ETapManagementSIT.dbo.scrap_status_history (
	id int IDENTITY(1,1) NOT NULL,
	scrap_stuctre_id int NULL,
	notes varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status_internal varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	role_id int NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	CONSTRAINT PK__scrap_st__3213E83F3ACAA346 PRIMARY KEY (id),
	CONSTRAINT scrap_status_history_scrapstructure_fkey FOREIGN KEY (scrap_stuctre_id) REFERENCES ETapManagementSIT.dbo.scrap_structure(id)
) GO;


-- ETapManagementSIT.dbo.site_comp_physicalverf definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.site_comp_physicalverf GO

CREATE TABLE ETapManagementSIT.dbo.site_comp_physicalverf (
	id int IDENTITY(1,1) NOT NULL,
	sitestructure_verfid int NULL,
	comp_id int NULL,
	qrcode varchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	remarks varchar(2000) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	CONSTRAINT PK__site_com__3213E83F529BF61A PRIMARY KEY (id),
	CONSTRAINT site_comp_physicalverf_site_structure_physicalverf_fkey FOREIGN KEY (sitestructure_verfid) REFERENCES ETapManagementSIT.dbo.site_structure_physicalverf(id)
) GO;


-- ETapManagementSIT.dbo.site_strct_physicalverf_doc definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.site_strct_physicalverf_doc GO

CREATE TABLE ETapManagementSIT.dbo.site_strct_physicalverf_doc (
	id int IDENTITY(1,1) NOT NULL,
	site_structure_physicalverf_id int NOT NULL,
	file_name varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	file_type varchar(10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[path] varchar(1000) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CONSTRAINT site_strct_physicalverf_doc_pkey PRIMARY KEY (id),
	CONSTRAINT site_structure_physicalverf_id_sspID_fkey FOREIGN KEY (site_structure_physicalverf_id) REFERENCES ETapManagementSIT.dbo.site_structure_physicalverf(id)
) GO;


-- ETapManagementSIT.dbo.disp_req_structure definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.disp_req_structure GO

CREATE TABLE ETapManagementSIT.dbo.disp_req_structure (
	id int IDENTITY(1,1) NOT NULL,
	dispreq_id int NULL,
	proj_struct_id int NULL,
	is_modification bit NULL,
	disp_structure_id int NULL,
	disp_struct_status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	from_project_id int NULL,
	surplus_date datetime NULL,
	fabriacation_cost decimal(10,0) NULL,
	Location varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CONSTRAINT PK__disp_req__3213E83F381D5DC3 PRIMARY KEY (id),
	CONSTRAINT DispReqStructire_siteReq_fkey FOREIGN KEY (dispreq_id) REFERENCES ETapManagementSIT.dbo.dispatch_requirement(id),
	CONSTRAINT DispReqStructire_structure_fkey FOREIGN KEY (proj_struct_id) REFERENCES ETapManagementSIT.dbo.project_structure(id)
) GO;


-- ETapManagementSIT.dbo.disp_structure_comp definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.disp_structure_comp GO

CREATE TABLE ETapManagementSIT.dbo.disp_structure_comp (
	id int IDENTITY(1,1) NOT NULL,
	disp_structure_id int NOT NULL,
	disp_comp_id int NOT NULL,
	last_scandate datetime NULL,
	comp_status varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	remarks varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	scanned_by int NULL,
	dispatch_date datetime NULL,
	from_scandate datetime NULL,
	from_scan_by int NULL,
	fabriacation_cost decimal(10,0) NULL,
	CONSTRAINT disp_structure_comp_pkey PRIMARY KEY (id),
	CONSTRAINT disp_req_structure_comp_id_CompID_fkey FOREIGN KEY (disp_comp_id) REFERENCES ETapManagementSIT.dbo.component(id),
	CONSTRAINT disp_req_structure_comp_id_StructureID_fkey FOREIGN KEY (disp_structure_id) REFERENCES ETapManagementSIT.dbo.disp_req_structure(id)
) GO;


-- ETapManagementSIT.dbo.disp_structure_documents definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.disp_structure_documents GO

CREATE TABLE ETapManagementSIT.dbo.disp_structure_documents (
	id int IDENTITY(1,1) NOT NULL,
	disp_structure_id int NOT NULL,
	file_name varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	file_type varchar(10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[path] varchar(1000) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CONSTRAINT disp_structure_documents_pkey PRIMARY KEY (id),
	CONSTRAINT disp_req_structure_docs_id_docsID_fkey FOREIGN KEY (disp_structure_id) REFERENCES ETapManagementSIT.dbo.disp_req_structure(id)
) GO;


-- ETapManagementSIT.dbo.disp_subcont_documents definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.disp_subcont_documents GO

CREATE TABLE ETapManagementSIT.dbo.disp_subcont_documents (
	id int IDENTITY(1,1) NOT NULL,
	disp_subcont_id int NOT NULL,
	file_name varchar(500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	file_type varchar(10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[path] varchar(1000) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CONSTRAINT disp_subcont_documents_pkey PRIMARY KEY (id),
	CONSTRAINT disp_subcont_id_docsID_fkey FOREIGN KEY (disp_subcont_id) REFERENCES ETapManagementSIT.dbo.dispatchreq_subcont(id)
) GO;


-- ETapManagementSIT.dbo.disp_subcont_structure definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.disp_subcont_structure GO

CREATE TABLE ETapManagementSIT.dbo.disp_subcont_structure (
	id int IDENTITY(1,1) NOT NULL,
	dispreqsubcont_id int NULL,
	proj_struct_id int NULL,
	is_Delivered bit DEFAULT 0 NULL,
	fabrication_cost decimal(10,2) NULL,
	monthly_rent decimal(10,2) NULL,
	contract_years decimal(10,2) NULL,
	plan_releasedate datetime NULL,
	expected_releasedate datetime NULL,
	actual_startdate datetime NULL,
	dispatch_date datetime NULL,
	disp_structure_id int NULL,
	CONSTRAINT PK__disp_sub__3213E83F47B4A99C PRIMARY KEY (id),
	CONSTRAINT disp_subcont_structure_structure_fkey FOREIGN KEY (proj_struct_id) REFERENCES ETapManagementSIT.dbo.project_structure(id),
	CONSTRAINT dispreqsubcont_structure_siteReq_fkey FOREIGN KEY (dispreqsubcont_id) REFERENCES ETapManagementSIT.dbo.dispatchreq_subcont(id)
) GO;


-- ETapManagementSIT.dbo.disp_fabrication_cost definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.disp_fabrication_cost GO

CREATE TABLE ETapManagementSIT.dbo.disp_fabrication_cost (
	id int IDENTITY(1,1) NOT NULL,
	dispatch_no varchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	disp_req_id int NOT NULL,
	disp_structure_id int NULL,
	assinged_project_id int NULL,
	status varchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	status_internal varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	role_id int NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	updated_by int NULL,
	updated_at datetime NULL,
	CONSTRAINT PK__disp_fab__3213E83F17579B13 PRIMARY KEY (id),
	CONSTRAINT UQ__disp_fab__F7205CCDFC4F1D62 UNIQUE (dispatch_no),
	CONSTRAINT fabrication_cost_disp_structure_id_fkey FOREIGN KEY (disp_structure_id) REFERENCES ETapManagementSIT.dbo.disp_req_structure(id),
	CONSTRAINT fabrication_cost_proj_fkey FOREIGN KEY (assinged_project_id) REFERENCES ETapManagementSIT.dbo.project(id)
) GO
CREATE UNIQUE INDEX UQ__disp_fab__F7205CCDFC4F1D62 ON ETapManagementSIT.dbo.disp_fabrication_cost (dispatch_no) GO;


-- ETapManagementSIT.dbo.disp_mod_stage_component definition

-- Drop table

-- DROP TABLE ETapManagementSIT.dbo.disp_mod_stage_component GO

CREATE TABLE ETapManagementSIT.dbo.disp_mod_stage_component (
	id int IDENTITY(1,1) NOT NULL,
	dispstruct_comp_id int NULL,
	leng decimal(10,6) NULL,
	breath decimal(10,6) NULL,
	height decimal(10,6) NULL,
	thickness decimal(10,6) NULL,
	weight decimal(10,6) NULL,
	make_type varchar(30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	addplate varchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	qr_code varchar(200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	created_by int NULL,
	created_at datetime DEFAULT getdate() NULL,
	CONSTRAINT compmodif_pkey PRIMARY KEY (id),
	CONSTRAINT compmodif_dispcomp_fkey FOREIGN KEY (dispstruct_comp_id) REFERENCES ETapManagementSIT.dbo.disp_structure_comp(id)
) GO;











CREATE   FUNCTION fn_GetDispStructureName(@site_disp_id int)

 RETURNS VARCHAR(2000)
AS BEGIN
	DECLARE @structureName varchar(2000)

	SELECT @structureName = COALESCE(@structureName + ',','') + Name
	FROM structures 
	where id in (select  structure_id from project_structure where id in  (select drs.proj_struct_id
	from disp_req_structure drs
	where drs.dispreq_id in ( @site_disp_id)))
	RETURN @structureName
END;



CREATE   FUNCTION fn_GetReqStructureName(@site_req_id int)

 RETURNS VARCHAR(2000)
AS BEGIN
	DECLARE @structureName varchar(2000)

	SELECT @structureName = COALESCE(@structureName + ',','') + Name
	FROM structures
	where id in (select srs.struct_id
	from site_req_structure srs
	where srs.site_req_id in ( @site_req_id))
	RETURN @structureName
END





CREATE       PROCEDURE sp_ApprovalDeclaration(@decl_id int,
	@role_name varchar(50),
	@role_hierarchy int  null,
	@updated_by int null
)
AS
BEGIN

	declare @role_id int
	SET @role_id = (select top 1
		id
	from roles
	where name =@role_name)
	declare @cond_status varchar (500)
	declare @new_status varchar (500)


	if (@role_hierarchy is null)
	BEGIN

		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='DECLARATION')
		SET @new_status= (select top 1
			new_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='DECLARATION')

	END 
ELSE 
BEGIN

		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and role_hierarchy  = @role_hierarchy and scenario_type ='DECLARATION')
		SET @new_status= (select top 1
			new_status
		from role_hierarchy
		where role_name =@role_name and role_hierarchy  = @role_hierarchy and scenario_type ='DECLARATION')

	END

	IF  EXISTS (select *
	from site_declaration sd
	where   Id = @decl_id and status_internal in (select value
		from STRING_SPLIT(@cond_status,','))) 
	BEGIN
		IF @role_name in ('PM','QA','TWCC')
		BEGIN
			update site_declaration  set status_internal = @new_status, status =@new_status, role_id =@role_id,updated_by =@updated_by where  id =@decl_id
			insert into sitedecl_status_history
				(sitedec_id ,notes ,status ,status_internal ,role_id ,updated_at,updated_by )
			select id, notes, status , status_internal , @role_id , getdate(), @updated_by
			from site_declaration sr
			where id = @decl_id
			IF @role_name in ('TWCC')
		BEGIN
				update project_structure set current_status ='READY TO REUSE', structure_status='AVAILABLE' where id = (select proj_struct_id
				from site_declaration
				where id =@decl_id)
			END
		END 
	ELSE 
	BEGIN
			select 'NOT ALLOWED'

		END
	END
	
	ELSE 
	BEGIN
		select 'NOT ALLOWED'
	END

END



CREATE       PROCEDURE sp_ApprovalFabrication(@decl_id int,
	@role_name varchar(50),
	@role_hierarchy int  null,
	@updated_by int null
)
AS
BEGIN

	declare @role_id int
	SET @role_id = (select top 1
		id
	from roles
	where name =@role_name)
	declare @cond_status varchar (500)
	declare @new_status varchar (500)
	declare @projectId int 
	declare @Cost decimal  (10)


	if (@role_hierarchy is null)
	BEGIN

		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='FABRICATION')
		SET @new_status= (select top 1
			new_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='FABRICATION')

	END 
ELSE 
BEGIN

		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and role_hierarchy  = @role_hierarchy and scenario_type ='FABRICATION')
		SET @new_status= (select top 1
			new_status
		from role_hierarchy
		where role_name =@role_name and role_hierarchy  = @role_hierarchy and scenario_type ='FABRICATION')

	END

	IF  EXISTS (select *
	from disp_fabrication_cost sd
	where   Id = @decl_id and status_internal in (select value
		from STRING_SPLIT(@cond_status,','))) 
	BEGIN
		IF @role_name in ('SITEFAA','PM','TWCC','FAA')
		BEGIN
			update disp_fabrication_cost  set status_internal = @new_status, status =@new_status, role_id =@role_id,updated_by =@updated_by where  id =@decl_id
			insert into fabrication_status_history
				(fabcost_id  ,status ,status_internal ,role_id ,updated_at,updated_by )
			select id, status , status_internal , @role_id , getdate(), @updated_by
			from disp_fabrication_cost sr
			where id = @decl_id
			IF @role_name in ('FAA')
		BEGIN
			SET @projectId=(select drs.fabriacation_cost from disp_fabrication_cost dfc inner join disp_req_structure drs on drs.disp_structure_id =dfc.disp_structure_id)
			SET @Cost=(select drs.proj_struct_id from disp_fabrication_cost dfc inner join disp_req_structure drs on drs.disp_structure_id =dfc.disp_structure_id)
			
			update project_structure set fabriacation_cost =@Cost where id = @projectId
				
			END
		END 
	ELSE 
	BEGIN
			select 'NOT ALLOWED'

		END
	END
	
	ELSE 
	BEGIN
		select 'NOT ALLOWED'
	END

END
;




CREATE     PROCEDURE sp_ApprovalRequirement(@req_id int,
	@role_name varchar(50),
	@role_hierarchy int  null
)
AS
BEGIN

	declare @role_id int
	SET @role_id = (select top 1
		id
	from roles
	where name =@role_name)
	declare @cond_status varchar (500)
	declare @new_status varchar (500)


	if (@role_hierarchy is null)
	BEGIN

		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='REQUIREMENT')
		SET @new_status= (select top 1
			new_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='REQUIREMENT')

	END 
ELSE 
BEGIN

		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and role_hierarchy  = @role_hierarchy and scenario_type ='REQUIREMENT')
		SET @new_status= (select top 1
			new_status
		from role_hierarchy
		where role_name =@role_name and role_hierarchy  = @role_hierarchy and scenario_type ='REQUIREMENT')

	END
	--if parallel approval condition either cmpc/twcc approved, then 2nd one apprval moves to READYTODIPATCH
	if EXISTS (select id
	from site_requirement
	where id = @req_id and status_internal  in ('CMPC APPROVED','TWCC APPROVED'))
	BEGIN
		SET @new_status = 'READY TO DISPATCH'
		print @new_status
	END
	--select @cond_status,@new_status
	if  EXISTS (select *
	from site_requirement
	where   Id = @req_id and status_internal in (select value
		from STRING_SPLIT(@cond_status,','))) 
	BEGIN

		update site_requirement  set status_internal = @new_status, status =@new_status, role_id =@role_id where  id =@req_id
		update site_req_structure set status = @new_status where site_req_id = @req_id

		insert into sitereq_status_history
			(mr_no,sitereq_id ,status ,status_internal ,role_id ,updated_at )
		select mr_no, id, status , status_internal , @role_id , getdate()
		from site_requirement sr
		where id = @req_id

	END
	ELSE 
	BEGIN
		select 'NOT ALLOWED'
	END
END



CREATE PROCEDURE dbo.sp_DashboardReport (@project_id int)
AS 
Begin
	declare @totalComp int
	declare @assincomp int
	declare  @scanned int
	declare @yetToscan int
	declare  @scrap int
	declare  @surpls int
	declare @TotStructure  int
declare @TotRequirement int 
declare @Fabrication  int
declare @Outsourcing int    
declare @Reuse  int
	
SET @totalComp= (select COUNT(c.id) from component c inner join project_structure ps on ps.id=c.proj_struct_id where ps.project_id =@project_id)


set @assincomp=( select COUNT(dsc.id) as total from disp_structure_comp dsc inner join disp_req_structure drs 
on drs.id=dsc.disp_structure_id inner join project_structure ps on ps.id=drs.proj_struct_id  where ps.project_id =@project_id) 

set @scanned=(select COUNT(dsc.id) from disp_structure_comp dsc inner join 
disp_req_structure drs on drs.id=dsc.disp_structure_id 
inner join project_structure ps on ps.id=drs.proj_struct_id  where ps.project_id =@project_id
and dsc.dispatch_date is not null)

set @yetToscan=(select COUNT(dsc.id) from disp_structure_comp dsc inner join 
disp_req_structure drs on drs.id=dsc.disp_structure_id 
inner join project_structure ps on ps.id=drs.proj_struct_id  where ps.project_id =@project_id
and dsc.dispatch_date is  null)

set @surpls=(select COUNT(sd.id) from site_declaration sd inner join project_structure ps on ps.id =sd.proj_struct_id
where sd.status_internal ='READY TO REUSE' and ps.project_id =@project_id)

set @scrap =(select COUNT(ss.id) from scrap_structure ss inner join project_structure ps on ps.id=ss.proj_struct_id where ps.project_id=@project_id)

set @TotStructure =(select COUNT(ps.id) from project_structure ps  where ps.project_id=@project_id)
set @TotRequirement =(select COUNT(sr.id) from site_requirement sr  where sr.from_project_id =@project_id)
set @Fabrication=(select COUNT(dr.id)from dispatch_requirement dr where dr.to_projectid=@project_id and dr.servicetype_id=1)
set @Outsourcing=(select COUNT(dr.id)from dispatch_requirement dr where dr.to_projectid=@project_id and dr.servicetype_id=2)
set @Reuse=(select COUNT(dr.id)from dispatch_requirement dr where dr.to_projectid=@project_id and dr.servicetype_id=4)
select @totalComp as TotalComp,@assincomp as AssignComp,@scanned as Scanned,@yetToscan as YetToscan,@scrap As Scrap,@surpls as Surpls,
@TotRequirement as TotRequirement,@TotStructure as TotStructure,@Fabrication as Fabrication,@Outsourcing as Outsourcing,@Reuse as Reuse


END






CREATE    PROCEDURE sp_getDeclaration(
	@role_name varchar(50),
	@role_hierarchy int  null)
AS
BEGIN

	declare @role_id int
	SET @role_id = (select top 1
		id
	from roles
	where name =@role_name)
	declare @cond_status varchar (500)
	declare @view_status varchar (500)

	--select @cond_status
	if (@role_hierarchy is null)
		BEGIN

		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='DECLARATION')
		SET @view_status= (select top 1
			view_details_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='DECLARATION')
	END 
	ELSE 
	BEGIN
		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='DECLARATION' and role_hierarchy  = @role_hierarchy)
		SET @view_status= (select top 1
			view_details_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='DECLARATION' and role_hierarchy  = @role_hierarchy)

	END


	select '1' as 'isAction', pp.name ProjectName, pp.proj_code ProjectCode, sitereq_id as SiteReqId, sd.Id as Id, sd.proj_struct_id as ProjStructId, s2.name as StructureName, ps.struct_code StructureCode, ps.structure_attributes_val as StructureAttributeValue, st.name as StructureTypeName, surplus_fromdate as SurplusDate, status as Status, status_internal as StatusInternal, sd.created_at as CreatedAt, sd.updated_at as UpdatedAt
	into #resultset1
	from site_declaration as sd inner join project_structure ps on sd.proj_struct_id =ps.id inner join structures s2 on  ps.structure_id  = s2.id inner join project pp on pp.id =sd.from_project_id inner join structure_type st on s2.structure_type_id  = st.id
	where status_internal  in (select value
	from STRING_SPLIT(@cond_status,',') )

	-- select '0' as 'isAction', pp.name ProjectName, pp.proj_code ProjectCode, sitereq_id as SiteReqId, sd.Id as Id, sd.proj_struct_id as ProjStructId, s2.name as StructureName, ps.struct_code StructureCode,ps.structure_attributes_val as StructureAttributeValue, st.name  as StructureTypeName, surplus_fromdate as SurplusDate, status as Status, status_internal as StatusInternal, sd.created_at as CreatedAt, sd.updated_at as UpdatedAt
	-- into #resultset2
	-- from site_declaration as sd inner join project_structure ps on sd.proj_struct_id =ps.id inner join structures s2 on  ps.structure_id  = s2.id inner join project pp on pp.id =sd.from_project_id inner join structure_type st on s2.structure_type_id  = st.id
	-- where status_internal  in (select value
	--from STRING_SPLIT(@view_status,',') )

			select *
		from #resultset1
	--union all 	select  * from #resultset2
END




CREATE PROCEDURE sp_getDispatch( @role_name varchar(50),@role_hierarchy int  null,@project_id int null, @vendor_id int null)
AS
BEGIN
	
	declare @role_id int 
	SET @role_id = (select top 1 id from roles where name =@role_name)
	declare @cond_status varchar (500)
	declare @view_status varchar (500)
		declare @service_type varchar (500)


	--select @cond_status
	if (@role_hierarchy is null)
	BEGIN 
		
	SET @cond_status= (select top 1 chk_status from role_hierarchy where role_name =@role_name  and scenario_type ='DISPATCH')
		SET @view_status= (select top 1 view_details_status from role_hierarchy where role_name =@role_name  and scenario_type ='DISPATCH')
				SET @service_type= (select top 1 service_type from role_hierarchy where role_name =@role_name  and scenario_type ='DISPATCH')

END 
ELSE 
BEGIN 
	SET @cond_status= (select top 1 chk_status from role_hierarchy where role_name =@role_name  and scenario_type ='DISPATCH'  and role_hierarchy  = @role_hierarchy)
	SET @view_status= (select top 1 view_details_status from role_hierarchy where role_name =@role_name  and scenario_type ='DISPATCH'  and role_hierarchy  = @role_hierarchy)
	SET @service_type= (select top 1 service_type from role_hierarchy where role_name =@role_name  and scenario_type ='DISPATCH'  and role_hierarchy  = @role_hierarchy)
	
	END

print @cond_status
SELECT '0' as 'isAction', sr.mr_no as MRNo, dr.dispatch_no as DispatchNo, dr.status as Status,ps.struct_code as struct_code,
--         SRS.quantity AS Quantity,
 (select SUM(quantity) from  site_req_structure srs where srs.site_req_id =dr.sitereq_id and srs.struct_id=ps.structure_id)AS Quantity,
		dr.status_internal as StatusInternal, dr.created_at as CreatedDateTime,
		dr.id as DispatchId, sr.id as SiteRequestId, 
		st.name as ServiceType, dr.servicetype_id as ServiceTypeId, 
		0 as SubContractorId, '' as SubContractorName,
		dr.to_projectid as ToProjectId,
		 (SELECT COUNT(1) FROM disp_structure_comp dsc WHERE disp_structure_id = drs.id) AS CountEarned,
		  ps.components_count AS ComponentsCount,
		(select  name from project where id = dr.to_projectid) as ToProjectName,
		
		dr.to_projectid as FromProjectId,
		0 as DispatchRequestSubContractorId,
			(select  ETapManagementSIT.dbo.fn_GetDispStructureName(dr.id)) as StructureName
		into #resultset1 
		FROM dispatch_requirement dr
		inner join disp_req_structure drs on drs.dispreq_id =dr.id 
		inner join project_structure ps on ps.id =drs.proj_struct_id 
		INNER JOIN site_requirement sr ON sr.id = dr.sitereq_id
		--INNER JOIN site_req_structure SRS ON SR.id = SRS.site_req_id
		INNER JOIN service_type st ON st.id  =dr.servicetype_id 
		where dr.status_internal  in (select value from STRING_SPLIT(@view_status,',') )
		and dr.servicetype_id in (select value from STRING_SPLIT(@service_type,',') )

		--SELECT '1' as 'isAction', sr.mr_no as MRNo, dr.dispatch_no as DispatchNo, dr.status as Status, 
		--dr.status_internal as StatusInternal, dr.created_at as CreatedDateTime, 
		--dr.id as DispatchId, sr.id as SiteRequestId, 
		--st.name as ServiceType, dr.servicetype_id as ServiceTypeId, 
		--drs.subcon_id as SubContractorId, sc.name as SubContractorName,
		--drs.id as DispatchRequestSubContractorId,
		--dr.to_projectid as ToProjectId,
		--dr.to_projectid as FromProjectId,
		--(select  ETapManagementSIT.dbo.fn_GetDispStructureName(dr.id)) as StructureName
		--into #resultset2
		--FROM dispatch_requirement dr
		--INNER JOIN site_requirement sr ON sr.id = dr.sitereq_id
		--INNER JOIN service_type st ON st.id  =dr.servicetype_id 
		--LEFT OUTER JOIN dispatchreq_subcont drs ON   dr.id = drs.dispreq_id
		--INNER JOIN sub_contractor sc ON sc.id  = drs.subcon_id 
		--where dr.status_internal  in (select value from STRING_SPLIT(@view_status,',') )
		--and dr.servicetype_id in (select value from STRING_SPLIT(@service_type,',') )
		
	--	    select * from #resultset1 union all 
	-- select * from #resultset2
	-- if (@project_id is not null)
	-- BEGIN
	--	 print 1
	--	   select * from #resultset1 where ToProjectId = @project_id  union all 
	-- select * from #resultset2 where ToProjectId = @project_id
		 
	-- END
	-- else  if (@vendor_id is not null)
	--BEGIN 
	--	print 2
	--		   select * from #resultset1 where SubContractorId = @vendor_id  union all 
	-- select * from #resultset2 where SubContractorId = @vendor_id
	--END
	--else 
	--BEGIN
	--	print 3
	--	  select * from #resultset1 union all 
	-- select * from #resultset2
	--END
		
	 select * from #resultset1 
	 	
END;








CREATE   PROCEDURE SP_GetDispatchDetailsForDelivery(@ProjectId int)
AS
BEGIN
SELECT dr.id as DispatchRequirementId, dr.dispatch_no AS DispatchNumber, dr.created_at As CreatedDate,dr.updated_at As UpdatedDate,
	   p.name AS ProjectName, p.id AS ProjectId, s.name AS StructureName,
	   ps.Id as ProjectStructId,
	    dr.status_internal as DispReqInternalStatus, 
	    dr.status as DispReqStatus ,
	    drs.disp_struct_status as DispStructStatus, 
	   ps.struct_code AS ProjectStructureCode, 
	   ps.structure_attributes_val AS StructureAttributesValue, 
	   ps.components_count AS ComponentsCount, 
	   drs.id AS DispatchStructureId,
	   drs.is_modification as isModification,
	   dr.servicetype_id AS ServiceTypeId,
	   (SELECT name FROM service_type st WHERE dr.servicetype_id = st.id) AS ServcieTypeName,
	   (SELECT COUNT(1) FROM disp_structure_comp dsc WHERE disp_structure_id = drs.id and dsc.from_scandate  is not null) AS CountEarned,
	    ( select top 1 subcon_id from dispatchreq_subcont ds where dispreq_id =dr.id) as DispatchVendorId,
	  (select top 1 mr_no from site_requirement sr where id = dr.sitereq_id) as MrNo
	 
	   FROM dispatch_requirement dr 
			  INNER JOIN disp_req_structure drs ON drs.dispreq_id = dr.id
			  INNER JOIN project_structure ps  ON ps.id = drs.proj_struct_id
			  INNER JOIN project p ON p.id  = dr.to_projectid
			  INNER JOIN structures s ON s.id = ps.structure_id
	  WHERE drs.from_project_id = @ProjectId  
	  and ps.components_count > (SELECT COUNT(*) FROM disp_structure_comp dsc WHERE disp_structure_id = drs.id and dsc.from_scandate  is not null)
		   and drs.disp_struct_status in ('READY TO DELIVER','TWCC MODIFIED APPROVED')
END





CREATE PROCEDURE sp_getFabrication(
	@role_name varchar(50),
	@role_hierarchy int  null)
AS
BEGIN

	declare @role_id int
	SET @role_id = (select top 1
		id
	from roles
	where name =@role_name)
	declare @cond_status varchar (500)
	declare @view_status varchar (500)

	--select @cond_status
	if (@role_hierarchy is null)
		BEGIN

		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='FABRICATION')
		SET @view_status= (select top 1
			view_details_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='FABRICATION')
	END 
	ELSE 
	BEGIN
		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='FABRICATION' and role_hierarchy  = @role_hierarchy)
		SET @view_status= (select top 1
			view_details_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='FABRICATION' and role_hierarchy  = @role_hierarchy)

	END


	select '1' as 'isAction',ps.fabriacation_cost as FabricationCost,dr.dispatch_no dispatchNo,ps.id ProjStructId, pp.name ProjectName, pp.proj_code ProjectCode, sitereq_id as SiteReqId, dfc.Id as Id,  s2.name as StructureName, ps.struct_code StructureCode, ps.structure_attributes_val as StructureAttributeValue, st.name as StructureTypeName,  dfc.status as Status, dfc.status_internal as StatusInternal, dfc.created_at as CreatedAt, dfc.updated_at as UpdatedAt
	into #resultset1
	from disp_fabrication_cost dfc 
	inner join dispatch_requirement dr on dr.id= dfc.disp_req_id
	inner join disp_req_structure drs on dr.id = drs.dispreq_id
	inner join project_structure ps on drs.proj_struct_id =ps.id
	inner join structures s2 on  ps.structure_id  = s2.id
	inner join project pp on pp.id =dr.to_projectid 
	inner join structure_type st on s2.structure_type_id  = st.id
	where  dfc.status_internal  in (select value
	from STRING_SPLIT(@cond_status,',') )

	-- select '0' as 'isAction', pp.name ProjectName, pp.proj_code ProjectCode, sitereq_id as SiteReqId, sd.Id as Id, sd.proj_struct_id as ProjStructId, s2.name as StructureName, ps.struct_code StructureCode,ps.structure_attributes_val as StructureAttributeValue, st.name  as StructureTypeName, surplus_fromdate as SurplusDate, status as Status, status_internal as StatusInternal, sd.created_at as CreatedAt, sd.updated_at as UpdatedAt
	-- into #resultset2
	-- from site_declaration as sd inner join project_structure ps on sd.proj_struct_id =ps.id inner join structures s2 on  ps.structure_id  = s2.id inner join project pp on pp.id =sd.from_project_id inner join structure_type st on s2.structure_type_id  = st.id
	-- where status_internal  in (select value
	--from STRING_SPLIT(@view_status,',') )

			select *
		from #resultset1
	--union all 	select  * from #resultset2
END;





  
  CREATE   PROCEDURE SP_GetReceiveComponentDetails(@DispatchStrutureId int)
AS
BEGIN
SELECT c.comp_name AS ComponentName, c.comp_id AS ComponentId, dsc.disp_structure_id AS DispatchStructureId, 
			dsc.last_scandate AS LastScanDate, dsc.comp_status AS ComponentStatus, dsc.remarks As Remarks,
			dsc.scanned_by AS ScannedBy,dsc.from_scandate as FromScanDate, dsc.dispatch_date as DispatchDate, dsc.id AS DispatchStructureComponentId, dsc.disp_comp_id AS DispatchComponentId
		FROM disp_structure_comp dsc 
			INNER JOIN component c ON c.id = dsc.disp_comp_id 
		WHERE dsc.disp_structure_id  = @DispatchStrutureId
END




CREATE     PROCEDURE SP_GetReceiveDetails(@ProjectId int)
AS
BEGIN
SELECT dr.id as DispatchRequirementId, dr.dispatch_no AS DispatchNumber, dr.created_at As CreatedDate,dr.updated_at As UpdatedDate,
	   p.name AS ProjectName, p.id AS ProjectId, s.name AS StructureName,
	   ps.Id as ProjectStructId,
	   dr.status_internal as DispReqInternalStatus, dr.status as DispReqStatus ,drs.disp_struct_status as DispStructStatus, 
	   ps.struct_code AS ProjectStructureCode, ps.structure_attributes_val AS StructureAttributesValue, 
	   ps.components_count AS ComponentsCount, drs.id AS DispatchStructureId,
	   dr.servicetype_id as ServiceTypeId, (select top 1 name from service_type st where id =dr.servicetype_id ) as ServcieTypeName,
	   drs.is_modification as isModification,
	   (SELECT COUNT(1) FROM disp_structure_comp dsc WHERE disp_structure_id = drs.id) AS CountEarned,
	  ( select top 1 subcon_id from dispatchreq_subcont ds where dispreq_id =dr.id) as DispatchVendorId,
	  (select top 1 mr_no from site_requirement sr where id = dr.sitereq_id) as MrNo
	  
	   FROM dispatch_requirement dr 
			  INNER JOIN disp_req_structure drs ON drs.dispreq_id = dr.id
			  INNER JOIN project_structure ps  ON ps.id = drs.proj_struct_id
			  INNER JOIN project p ON p.id  = dr.to_projectid
			  INNER JOIN structures s ON s.id = ps.structure_id
	  WHERE dr.to_projectid = @ProjectId
	  -- remove once surplus approved
	  and ps.current_status ='DISPATCH IN PROGRESS'
END	


CREATE     PROCEDURE SP_GetReceiveDetailssurplus(@ProjectId int)
AS
BEGIN
SELECT dr.id as DispatchRequirementId, dr.dispatch_no AS DispatchNumber, dr.created_at As CreatedDate,dr.updated_at As UpdatedDate,
	   p.name AS ProjectName, p.id AS ProjectId, s.name AS StructureName,
	   ps.Id as ProjectStructId,
	   dr.status_internal as DispReqInternalStatus, dr.status as DispReqStatus ,drs.disp_struct_status as DispStructStatus, 
	   ps.struct_code AS ProjectStructureCode, ps.structure_attributes_val AS StructureAttributesValue, 
	   ps.components_count AS ComponentsCount, drs.id AS DispatchStructureId,
	   dr.servicetype_id as ServiceTypeId, (select top 1 name from service_type st where id =dr.servicetype_id ) as ServcieTypeName,
	   drs.is_modification as isModification,
	   (SELECT COUNT(1) FROM disp_structure_comp dsc WHERE disp_structure_id = drs.id) AS CountEarned,
	  ( select top 1 subcon_id from dispatchreq_subcont ds where dispreq_id =dr.id) as DispatchVendorId,
	  (select top 1 mr_no from site_requirement sr where id = dr.sitereq_id) as MrNo
	  
	   FROM dispatch_requirement dr 
			  INNER JOIN disp_req_structure drs ON drs.dispreq_id = dr.id
			  INNER JOIN project_structure ps  ON ps.id = drs.proj_struct_id
			  INNER JOIN project p ON p.id  = dr.to_projectid
			  INNER JOIN structures s ON s.id = ps.structure_id
	  WHERE dr.to_projectid = @ProjectId
	  -- remove once surplus approved
	  and ps.current_status ='IN USE'
END	




CREATE     PROCEDURE sp_GetRequirement(
	@role_name varchar(50),
	@role_hierarchy int  null)
AS
BEGIN

	declare @role_id int
	DECLARE @structureName varchar(2000)
	SET @role_id = (select top 1
		id
	from roles
	where name =@role_name)
	declare @cond_status varchar (500)
	--select @cond_status
	if (@role_hierarchy is null)
	BEGIN
		print 's'
		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and scenario_type='REQUIREMENT')
	END 
ELSE 
BEGIN
		print 'ss'
		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and role_hierarchy  = @role_hierarchy and scenario_type='REQUIREMENT')

	END

	--get list, rolename based assigned status
	--isAction (1) means allow to do actions
	select 1 as 'isAction', mr_no as MrNo, sr.Id, from_project_id as ProjectId, remarks as Remarks, status as Status, status_internal as StatusInternal, role_id as RoleId , (select ETapManagementSIT.dbo.fn_GetReqStructureName(sr.id)) as StructureName, p.name as ProjectName, p.proj_code  as ProjectCode, sr.created_at as CreatedDate
	into #resultset1
	from site_requirement sr inner join project p on p.id  = sr.from_project_id
	where status_internal  in (select value
	from STRING_SPLIT(@cond_status,',') )
	order by sr.created_at,sr.updated_at  desc


	--get requirement id list for existing update in status history for this role id based on latest updated date
	SELECT sitereq_id
	INTO #distSiteReqId
	FROM (
  SELECT sitereq_id, updated_at, ROW_NUMBER() OVER (PARTITION BY sitereq_id ORDER BY updated_at desc) RN
		FROM sitereq_status_history
		where role_id = @role_id and sitereq_id  not in (select id
			from #resultset1)) S
	where RN =1

	--isAction (0) means should not to do actions
	select 0 as 'isAction', mr_no as MrNo, sr.Id, from_project_id as ProjectId, remarks as Remarks, status as Status, status_internal as StatusInternal, role_id as RoleId, (select ETapManagementSIT.dbo.fn_GetReqStructureName(sr.id)) as StructureName, p.name as ProjectName, p.proj_code as ProjectCode, sr.created_at as CreatedDate
	into #resultset2
	from site_requirement sr inner join project p on p.id  = sr.from_project_id
	where sr.id  in (select sitereq_id
	from #distSiteReqId)
	order by sr.created_at,sr.updated_at  desc

			(
		select *
		from #resultset1
	union all
		select *
		from #resultset2)
	order by MrNo desc

END





CREATE   PROCEDURE SP_GetSiteRequirement(@SiteRequirementId int)
 AS
 BEGIN

 SELECT site_req_id AS SiteRequirementId, struct_id AS StructureId, structure_attributes_val AS StrutureAttributes,
		plan_startdate AS PlanStartDate, plan_releasedate AS PlanEndDate, quantity AS Quantity
		FROM site_req_structure WHERE site_req_id = @SiteRequirementId
 END


	CREATE     PROCEDURE SP_GetSubContractorComponentDetails(@DispatchStructureId int)
AS
BEGIN

SELECT dsc.dispatch_date as DispatchDate, DSC.id AS DispStructureComponentId, C.comp_name AS ComponentName, CT.name AS ComponentType, C.comp_id AS ComponentId, C.drawing_no AS DrawingNumber   
				FROM disp_structure_comp DSC INNER JOIN 
				component C ON C.id = DSC.disp_comp_id INNER JOIN 
				component_type CT ON CT.id = C.comp_type_id
				WHERE DSC.disp_structure_id = @DispatchStructureId 
END





CREATE        PROCEDURE SP_GetSubContractorDetails(@VendorId int)
AS
BEGIN
SELECT DRS.id AS DispSubContractorId, DSS.id AS DispSubContractorStructureId, DRS.dispatch_no AS DCNumber, PS.struct_code AS StructureCode, S.name AS StructureName, 
       sr.mr_no as MRNO,
		DRS.quantity AS Quantity, PS.structure_attributes_val AS StructureAttributesValue, 
		PS.components_count AS ComponentCount,
		DSS.disp_structure_id AS DispStructureId,
		PS.id AS ProjectStructureId ,
		drs.created_at CreatDate, drs.updated_at as UpdatedDate,
		 (SELECT COUNT(1) FROM disp_structure_comp dsc WHERE disp_structure_id = dss.disp_structure_id) AS CountEarned,
		  ps.components_count AS ComponentsCount
		into #resultset1 
			  FROM dispatchreq_subcont DRS INNER JOIN 
			  disp_subcont_structure DSS ON DSS.dispreqsubcont_id = DRS.id INNER JOIN
			  project_structure PS ON PS.id = DSS.proj_struct_id INNER JOIN 
			  structures S ON S.id = PS.structure_id 
			  INNER JOIN 
			  dispatch_requirement dr on dr.id= drs.dispreq_id INNER JOIN 
			  site_requirement sr on sr.id =dr.sitereq_id 
			  WHERE DRS.subcon_id = @VendorId AND PS.components_count > (SELECT COUNT(id) FROM disp_structure_comp WHERE disp_structure_id = DSS.disp_structure_id and dispatch_date is not null)
			  and DRS.servicetype_id in (1,2) 
			--Remove disp_req_structure table join for geting structure dublicate record
			  
			  SELECT DRS.id AS DispSubContractorId, DSS.id AS DispSubContractorStructureId, DRS.dispatch_no AS DCNumber, PS.struct_code AS StructureCode, S.name AS StructureName, 
			   sr.mr_no as MRNO,
		DRS.quantity AS Quantity, PS.structure_attributes_val AS StructureAttributesValue, 
		PS.components_count AS ComponentCount,
		DSS.disp_structure_id AS DispStructureId,
		PS.id AS ProjectStructureId,
		drs.created_at CreatDate, drs.updated_at as UpdatedDate,
		 (SELECT COUNT(1) FROM disp_structure_comp dsc WHERE disp_structure_id = dss.disp_structure_id) AS CountEarned,
		  ps.components_count AS ComponentsCount
		into #resultset2
			   FROM dispatchreq_subcont DRS INNER JOIN 
			  disp_subcont_structure DSS ON DSS.dispreqsubcont_id = DRS.id INNER JOIN
			  project_structure PS ON PS.id = DSS.proj_struct_id INNER JOIN 
			  structures S ON S.id = PS.structure_id 
			  INNER JOIN 
			  dispatch_requirement dr on dr.id= drs.dispreq_id INNER JOIN 
			  site_requirement sr on sr.id =dr.sitereq_id 
			  WHERE DRS.subcon_id = @VendorId AND PS.components_count > (SELECT COUNT(id) FROM disp_structure_comp WHERE disp_structure_id = DSS.disp_structure_id and dispatch_date is not null)
			  and DRS.servicetype_id in (4) 
			  and DSS.disp_structure_id  in (select disp_structure_id from disp_structure_comp dsc where from_scandate is not  null and disp_structure_id = DSS.disp_structure_id)
			  -- and DSS.disp_structure_id not in (select id from disp_req_structure  where status ='TWCCMODIFYAPRD' and id = DSS.disp_structure_id )

			  
			  select * from #resultset1 union 
			  select * from #resultset2
END;

	
	
	
	
	


CREATE       PROCEDURE [dbo].[SP_GETTWCCDispatch](@Status varchar(100))
AS
BEGIN

SELECT SR.id AS SiteRequirementId, SR.mr_no AS MRNumber, S.name AS StructureName, 0 as PendingQuantity, 
	   SR.from_project_id AS FromProjectId, U.ps_no AS RaisedBy, P.name AS RequestBy,
	   S.id AS StructureId, SRS.status AS RequestStatus, SRS.structure_attributes_val AS StructureAttributes,
	   SRS.quantity AS Quantity, srs.id, SR.created_at AS CreatedAt, SR.updated_at AS UpdatedAt
				FROM site_requirement SR INNER JOIN
				site_req_structure SRS ON SR.id = SRS.site_req_id INNER JOIN
				project P ON P.id = SR.from_project_id INNER JOIN
				structures S ON s.id = SRS.struct_id INNER JOIN
				users U ON U.id = SR.created_by
				WHERE SRS.status in (select value from  STRING_SPLIT(@Status,','))
				--and srs.id not in (select site_req_structid from dispatch_requirement dr  )

END




CREATE   PROCEDURE SP_GetViewStructureChartDetails(@ProjectStructureId int)
AS
BEGIN
	SELECT ps.components_count as TotalCount, 
		(SELECT COUNT(1) FROM disp_structure_comp dsc WHERE dsc.disp_structure_id = drs.id) as AssignedCount, 
		(SELECT COUNT(1) FROM disp_structure_comp dsc2 WHERE dsc2.disp_structure_id = drs.id AND dispatch_date IS NOT NULL) AS DispatchCount,
		(SELECT COUNT(1) FROM disp_structure_comp dsc2 WHERE dsc2.disp_structure_id = drs.id AND last_scandate IS NOT NULL) AS ScannedCount
		FROM project_structure ps 
		INNER JOIN disp_req_structure drs ON drs.proj_struct_id = ps.id WHERE drs.proj_struct_id = @ProjectStructureId
END





CREATE         PROCEDURE sp_RejectionDeclaration(@decl_id int,
	@role_name varchar(50),
	@role_hierarchy int  NULL,
	@updated_by int null
)
AS
BEGIN

	declare @role_id int
	SET @role_id = (select top 1
		id
	from roles
	where name =@role_name)
	declare @cond_status varchar (500)
	declare @new_status varchar (500)

	if (@role_hierarchy is null)
	BEGIN

		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='DECLARATION')
		SET @new_status= (select top 1
			chk_status
		from role_hierarchy
		where  role_hierarchy  = (select top 1
			role_hierarchy
		from role_hierarchy
		where role_name =@role_name and scenario_type ='DECLARATION') -1)

	END 
ELSE 
BEGIN
		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and role_hierarchy  = @role_hierarchy and scenario_type ='DECLARATION')
		SET @new_status= (select top 1
			chk_status
		from role_hierarchy
		where role_hierarchy  = @role_hierarchy and scenario_type ='DECLARATION')

	END
	--select @cond_status 
	--select @new_status

	IF  EXISTS (select *
	from site_declaration sd
	where   Id = @decl_id and status_internal in (select value
		from STRING_SPLIT(@cond_status,','))) 
	BEGIN
		IF @role_name in ('PM','QA','TWCC')
		BEGIN
			update site_declaration  set status_internal = @role_name + 'REJECTED', status =@role_name + 'REJECTED', role_id =@role_id,updated_by =@updated_by where  id = @decl_id
			insert into sitedecl_status_history
				(sitedec_id ,notes ,status ,status_internal ,role_id ,updated_at,updated_by )
			select id, notes, status , status_internal , @role_id , getdate(), @updated_by
			from site_declaration sr
			where id = @decl_id
			update project_structure set current_status ='SCRAPPED', structure_status = 'NOT AVAIL' where id = (select proj_struct_id
			from site_declaration
			where id =@decl_id)
			
			insert into scrap_structure  (proj_struct_id,STATUS,created_at ,created_by ) values ((select proj_struct_id  from site_declaration  where id = @decl_id),'NEW',getdate(),@updated_by) 

		END
		ELSE 
		BEGIN
			select 'NOT ALLOWED'
		END
	END	
	ELSE 
	BEGIN
		select 'NOT ALLOWED'
	END

END





CREATE         PROCEDURE sp_RejectionFabrication(@decl_id int,
	@role_name varchar(50),
	@role_hierarchy int  NULL,
	@updated_by int null
)
AS
BEGIN

	declare @role_id int
	SET @role_id = (select top 1
		id
	from roles
	where name =@role_name)
	declare @cond_status varchar (500)
	declare @new_status varchar (500)

	if (@role_hierarchy is null)
	BEGIN

		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='FABRICATION')
		SET @new_status= (select top 1
			chk_status
		from role_hierarchy
		where  role_hierarchy  = (select top 1
			role_hierarchy
		from role_hierarchy
		where role_name =@role_name and scenario_type ='FABRICATION') -1)

	END 
ELSE 
BEGIN
		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and role_hierarchy  = @role_hierarchy and scenario_type ='FABRICATION')
		SET @new_status= (select top 1
			chk_status
		from role_hierarchy
		where role_hierarchy  = @role_hierarchy and scenario_type ='FABRICATION')

	END
	--select @cond_status 
	--select @new_status

	IF  EXISTS (select *
	from site_declaration sd
	where   Id = @decl_id and status_internal in (select value
		from STRING_SPLIT(@cond_status,','))) 
	BEGIN
		IF @role_name in ('PM','TWCC','FAA')
		BEGIN
			update disp_fabrication_cost  set status_internal = @role_name + 'REJECTED', status =@role_name + 'REJECTED', role_id =@role_id,updated_by =@updated_by where  id = @decl_id
			insert into fabrication_status_history
				(fabcost_id  ,status ,status_internal ,role_id ,updated_at,updated_by )
			select id, status , status_internal , @role_id , getdate(), @updated_by
			from disp_fabrication_cost sr
			where id = @decl_id
--			update project_structure set current_status ='SCRAPPED', structure_status = 'NOT AVAIL' where id = (select proj_struct_id
--			from site_declaration
--			where id =@decl_id)
--			
--			insert into scrap_structure  (proj_struct_id,STATUS,created_at ,created_by ) values ((select proj_struct_id  from site_declaration  where id = @decl_id),'NEW',getdate(),@updated_by) 

		END
		ELSE 
		BEGIN
			select 'NOT ALLOWED'
		END
	END	
	ELSE 
	BEGIN
		select 'NOT ALLOWED'
	END

END




CREATE        PROCEDURE sp_RejectRequirement(@req_id int,
	@role_name varchar(50),
	@role_hierarchy int  null
)
AS
BEGIN

	declare @role_id int
	SET @role_id = (select top 1
		id
	from roles
	where name =@role_name)
	declare @cond_status varchar (500)
	declare @new_status varchar (500)


	if (@role_hierarchy is null)
	BEGIN

		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and scenario_type ='REQUIREMENT')
		SET @new_status= (select top 1
			chk_status
		from role_hierarchy
		where  role_hierarchy  = (select top 1
			role_hierarchy
		from role_hierarchy
		where  scenario_type ='REQUIREMENT' and role_name =@role_name and scenario_type ='REQUIREMENT') -1)

	END 
ELSE 
BEGIN

		SET @cond_status= (select top 1
			chk_status
		from role_hierarchy
		where role_name =@role_name and role_hierarchy  = @role_hierarchy and scenario_type ='REQUIREMENT')
		SET @new_status= (select top 1
			chk_status
		from role_hierarchy
		where role_hierarchy  = @role_hierarchy and scenario_type ='REQUIREMENT')

	END
	--select @cond_status 
	--select @new_status

	if  EXISTS (select *
	from site_requirement
	where   Id = @req_id and status_internal in (select value
		from STRING_SPLIT(@cond_status,','))) 
	BEGIN
		update site_requirement  set status ='REJECTED',status_internal = @new_status , role_id = @role_id where  id =@req_id
		insert into sitereq_status_history
			(mr_no,sitereq_id ,status ,status_internal ,role_id ,updated_at )
		select mr_no, id, status, status_internal , @role_id , getdate()
		from site_requirement sr
		where id = @req_id
	END
	ELSE 
	BEGIN
		select 'NOT ALLOWED'
	END

END



CREATE       PROCEDURE [dbo].[SP_TWCCInnerStructureDetails](@StructureId int)
AS
BEGIN

SELECT PS.id AS ProjectStructureId, PS.structure_id AS StructureId, PS.struct_code AS StructureCode, PS.project_id AS ProjectId, 
			PS.structure_attributes_val AS ProjectStructureAttributes, 
			PS.current_status AS ProjectCurrentStatus, PS.structure_status AS ProjectStructureStatus,
			SD.surplus_fromdate AS SurplusFromDate, P.name AS ProjectName,SD.from_project_id as SurplusFromProjectId,
			0 AS SiteRequirementId, '' AS SiteRequirementStructureAttributes, NULL AS PlanStartDate, NULL AS PlanReleaseDate, PS.exp_release_date AS ExpReleaseDate
				FROM project_structure PS INNER JOIN 
				project P ON P.id = PS.project_id INNER JOIN 
				site_declaration SD ON SD.proj_struct_id = PS.id 
				WHERE PS.structure_id = @StructureId and  PS.current_status ='READY TO REUSE'
END
